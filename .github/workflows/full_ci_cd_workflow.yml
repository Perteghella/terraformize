name: push CI CD

on:
  release:
    types: [published]
    branches: [ "master" ]

jobs:

  testing_job:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11", ]
    services:
      consul:
        image: consul
      rabbit:
        image: rabbitmq:3.11.4-management-alpine
    container: python:${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          wget https://releases.hashicorp.com/terraform/1.4.2/terraform_1.4.2_linux_amd64.zip -O /tmp/terraform_1.4.2_linux_amd64.zip
          unzip /tmp/terraform_*.zip
          cp terraform /usr/bin/terraform
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test
        run: |
          coverage run -m unittest
          codecov  -t  ${{ secrets.CODECOV_TOKEN }}

  build_and_publish_job:

    runs-on: ubuntu-latest
    needs: testing_job
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push ARM64
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/arm64
          push: true
          file: Dockerfile-arm64
          tags: perteghella/${{ github.event.repository.name }}:latest-arm64
      - name: Build and push AMD64
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          file: Dockerfile-amd64
          tags: perteghella/${{ github.event.repository.name }}:latest-amd64

  build_and_publish_job_version:

    runs-on: ubuntu-latest
    needs: testing_job
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push ARM64
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/arm64
          push: true
          file: Dockerfile-amd64
          tags: perteghella/${{ github.event.repository.name }}:v${{ github.run_number }}-arm64
      - name: Build and push AMD64
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          file: Dockerfile-amd64
          tags: perteghella/${{ github.event.repository.name }}:v${{ github.run_number }}-amd64